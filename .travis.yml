# Based on https://github.com/hvr/multi-ghc-travis
#
# NB: don't set `language: haskell` here
matrix:
  include:
  - env: CABALVER=1.24 GHCVER=8.0.1
    addons: {apt: {packages: [cabal-install-1.24, ghc-8.0.1], sources: [hvr-ghc]}}
  - env: CABALVER=1.24 GHCVER=8.0.2
    addons: {apt: {packages: [cabal-install-1.24, ghc-8.0.1], sources: [hvr-ghc]}}
  - env: CABALVER=2.0 GHCVER=8.2.2
    addons: {apt: {packages: [cabal-install-2.0, ghc-8.0.1], sources: [hvr-ghc]}}
  - env: CABALVER=2.2 GHCVER=8.4.3
    addons: {apt: {packages: [cabal-install-2.2, ghc-8.0.1], sources: [hvr-ghc]}}
  - env: CABALVER=2.4 GHCVER=8.6.1
    addons: {apt: {packages: [cabal-install-2.4, ghc-8.0.1], sources: [hvr-ghc]}}

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install --only-dependencies

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cabal --version
 - cabal configure -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated

# The following scriptlet checks that the resulting source distribution can be built & installed
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi
