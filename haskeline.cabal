Name:           haskeline
Cabal-Version:  >=1.2
Version:        0.1
Category:       User Interfaces
License:        BSD3
License-File:   LICENSE
Copyright:      (c) Judah Jacobson
Author:         Judah Jacobson
Maintainer:     Judah Jacobson <judah.jacobson@gmail.com>
Category:       User Interfaces
Synopsis:       An extensible library for reading a line of input from the user.
Description:    This library provides an extensible, flexible interface for reading
                a line of input from the user.  Its goal is to be useful enough to 
                replace readline in the GHC compiler.
Homepage:       http://code.haskell.org/haskeline
Stability:      Experimental
Build-Type:     Simple

flag target-mingw
    Description: Use native Win32 Console functionality (suitable for MinGW)
    Default: False

Library
    Build-depends:  base>=3.0, stm>=2.1.1, mtl>=1.1, containers>=0.1,
                    filepath>=1.1, directory>=1.0
    Extensions:     ForeignFunctionInterface, Rank2Types, FlexibleInstances,
                FlexibleContexts, ExistentialQuantification
                ScopedTypeVariables, GeneralizedNewtypeDeriving
                MultiParamTypeClasses, OverlappingInstances
                PatternSignatures, CPP, DeriveDataTypeable,
                PatternGuards
                -- Note: GADTs are needed to allow contexts of different
                -- lengths (see code of Haskeline.repeatTillFinish)
                GADTs
    Exposed-Modules:
                System.Console.Haskeline
                System.Console.Haskeline.Monads
    Other-Modules:
                System.Console.Haskeline.Command
                System.Console.Haskeline.Command.Completion
                System.Console.Haskeline.Command.History
                System.Console.Haskeline.Emacs
                System.Console.Haskeline.InputT
                System.Console.Haskeline.LineState
                System.Console.Haskeline.Settings
                System.Console.Haskeline.Term
                System.Console.Haskeline.Vi
    include-dirs: includes
    if flag(target-mingw) {
        Build-depends: Win32>=2.0
        Other-modules: System.Console.Haskeline.Backend.Win32
        c-sources: cbits/win_console.c
        includes: win_console.h
        install-includes: win_console.h
        cpp-options: -DMINGW
    } else {
        Build-depends: terminfo>=0.2, unix>=2.2
        Other-modules: 
                System.Console.Haskeline.Backend.Posix
                System.Console.Haskeline.Backend.DumbTerm
                System.Console.Haskeline.Backend.Terminfo
    }
    ghc-options: -Wall
